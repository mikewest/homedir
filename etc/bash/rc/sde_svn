# ~/etc/bash/rc/svn
# -*- Mode: Bash; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-
#
# svn-related commands

export sde_root='http://madmin-1.sznet.de/svn/sde_root'
export sde_branches="${sde_root}/branches"

alias st="svn status"
alias update_demo="ssh host1 'svn up /var/www/beispiel-seiten.sueddeutsche.de/'"

function branch_for_bug() {
    bug_id="$1"
    if [ -n "${bug_id}" ]; then
        cd ${svn_branches_base}
        svn copy ${sde_branches}/production ${sde_branches}/${bug_id} -m "Branch fuer [${bug_id}]"
        svn co -N ${sde_branches}/${bug_id}
        cd ${svn_branches_base}/${bug_id}
    else
        echo 'USAGE: `branch_for_bug BUG-ID`';
        return 1;
    fi
}

function sparse_checkout() {
    echo $1 | perl -e '
        $_ = <>;
        chomp;

        if ( $_ eq "css" ) {
            $_ = "./sdeimperia85/pblroot/htdocs/css/"
        } elsif ( $_ eq "grid" ) {
            $_ = "./sdeimperia/pblroot/includes/grids/workflowoptimierung/"
        }

        if ( m {^$}x ) {
            print "USAGE: `sparse_checkout DIRECTORY`\n"
        } else {
            @dirs = split( m{/} );
            $path = "";
            foreach $cur ( @dirs ) {
                $path .= "$cur/";
                print `svn up -N $path | grep "^A "`;
            }
        }
        `cd $_`
    '
}

function svn_current_branch() {
    local branch=`pwd | sed -e "s#.*/\([A-Z]*\-[0-9]*\).*#\1#"`
    local curdir=`pwd`
    if [ "${branch}" = "${curdir}" ]; then
        echo '';
    else
        echo "${branch} ";
    fi
}
SVN_STATUS_PROMPT='$(svn_current_branch)'

function generate_commit_message() {
    local change_rev=`svn info | grep "^Last Changed Rev:" | sed -e "s#Last Changed Rev: \([0-9]*\)#\1#"`
    local svn_path=`svn info | grep "^URL:" | sed -e "s#URL: \(.*\)#\1#"`
    echo "Fix for [$(svn_current_branch)]"
    echo "- svn merge -r????:${change_rev} ${svn_path}"
}

function sc() {
  local message="$1"
  if [ -n "$message" ]; then
    svn commit -m "$1"
  else
    svn commit
  fi
}